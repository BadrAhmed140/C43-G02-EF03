// <auto-generated />
using C43_G02_EF03.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C43_G02_EF03.Migrations
{
    [DbContext(typeof(ITIContext))]
    partial class ITIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Course_Inst", b =>
                {
                    b.Property<int>("inst_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Course_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<float>("Evaluate")
                        .HasColumnType("real");

                    b.HasKey("inst_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Course_Insts");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("Dept_ID")
                        .IsUnique();

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Stud_Course", b =>
                {
                    b.Property<int>("stud_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Course_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.HasKey("stud_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Stud_Courses");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Topic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Course", b =>
                {
                    b.HasOne("C43_G02_EF03.Data.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Course_Inst", b =>
                {
                    b.HasOne("C43_G02_EF03.Data.Models.Course", "Course")
                        .WithMany("Course_Insts")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C43_G02_EF03.Data.Models.Instructor", "Instructor")
                        .WithMany("Course_Insts")
                        .HasForeignKey("inst_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Instructor", b =>
                {
                    b.HasOne("C43_G02_EF03.Data.Models.Department", "Department")
                        .WithOne("Instructor")
                        .HasForeignKey("C43_G02_EF03.Data.Models.Instructor", "Dept_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Stud_Course", b =>
                {
                    b.HasOne("C43_G02_EF03.Data.Models.Course", "Course")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C43_G02_EF03.Data.Models.Student", "Student")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("stud_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Student", b =>
                {
                    b.HasOne("C43_G02_EF03.Data.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Course", b =>
                {
                    b.Navigation("Course_Insts");

                    b.Navigation("Stud_Courses");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructor")
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Instructor", b =>
                {
                    b.Navigation("Course_Insts");
                });

            modelBuilder.Entity("C43_G02_EF03.Data.Models.Student", b =>
                {
                    b.Navigation("Stud_Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
